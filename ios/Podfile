# Resolve react_native_pods.rb with node to allow for hoisting
use_frameworks! :linkage => :static
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!
# rn_maps_path = '../node_modules/react-native-maps'
# pod 'react-native-google-maps', :path => rn_maps_path, :modular_headers => true
# pod 'RNGoogleMobileAds', :path => '../node_modules/react-native-google-mobile-ads'
# pod 'React-Core', :path=>'../node_modules/react-native/', :modular_headers => true
# pod 'react-native-safe-area-context', :path=>'../node_modules/react-native-safe-area-context', :modular_headers => true
# pod 'react-native-splash-screen', :path=>'../node_modules/react-native-splash-screen', :modular_headers => true
# pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules', :modular_headers => true
# pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings', :modular_headers => true
# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'mlivingwill' do
  config = use_native_modules!
  $RNGoogleMobileAdsAsStaticFramework = true
  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-google-maps', :path => rn_maps_path, :modular_headers => true
  pod 'RNGoogleMobileAds', :path => '../node_modules/react-native-google-mobile-ads'
  pod 'React-Core', :path=>'../node_modules/react-native/', :modular_headers => true
  pod 'react-native-safe-area-context', :path=>'../node_modules/react-native-safe-area-context', :modular_headers => true
  # pod 'react-native-splash-screen', :path=>'../node_modules/react-native-splash-screen', :modular_headers => true
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules', :modular_headers => true
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings', :modular_headers => true

  use_react_native!(
    :path => config[:reactNativePath],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    # :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'mlivingwillTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    installer.pods_project.targets.each do |target|
      if ["RNScreens", "React-Fabric", "RNGestureHandler","gRPC-Core","RCT-Folly.common","React-Core"].any? { |t| t == target.name }
        append_header_search_path(target, "${PODS_ROOT}/../../node_modules/react-native/ReactCommon")
      end
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_ENABLE_INSPECTOR=1' # or '1' depending on your needs
      end
    end
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  end
end
def append_header_search_path(target, path)
  target.build_configurations.each do |config|
      # Note that there's a space character after `$(inherited)`.
      config.build_settings["HEADER_SEARCH_PATHS"] ||= "$(inherited) "
      config.build_settings["HEADER_SEARCH_PATHS"] << path
  end
end
